<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFcAAABXCAYAAABxyNlsAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAHdElNRQfdCxsMJhKrwU/WAAAAB3RFWHRBdXRob3IAqa7M
        SAAAAAx0RVh0RGVzY3JpcHRpb24AEwkhIwAAAAp0RVh0Q29weXJpZ2h0AKwPzDoAAAAOdEVYdENyZWF0
        aW9uIHRpbWUANfcPCQAAAAl0RVh0U29mdHdhcmUAXXD/OgAAAAt0RVh0RGlzY2xhaW1lcgC3wLSPAAAA
        CHRFWHRXYXJuaW5nAMAb5ocAAAAHdEVYdFNvdXJjZQD1/4PrAAAACHRFWHRDb21tZW50APbMlr8AAAAG
        dEVYdFRpdGxlAKju0icAAArNSURBVHhe7Z1rVxPJFob9/19mlo56xuMPmDUX53yds9Yo4ZIQAgQQoqIo
        F1FUvP2Cnn6q15vsFNWhga5qkuHDu/pCp6v2k917163DrTt37mV//PG/JHr0qJD2J/39PI2u+3Ps/Pjf
        mtFvvz3KfvzxTnbr558fZvPzi0m0sLDkpP1Jf7+K6rjHVfTkSSv76af7aeBaoJMMt3+314U+02otlP6t
        aUWHOwkOx6G/A0zQQtfZ85OOm1Zyzw0B8GHac/a8PafzoXuWlZNa1wJuSFzXbi9nS0sdt0WcW1zkHvy9
        uIZrqwBvQkngWmO1b433zy0utrOVldXs6dOdbHNzK99uZ1tb29nq6nq2traW9Xo9J47b7c6Zz18XJfVc
        XxaIvG5ubj5bXl7JXrzYzU5PP2cfP37MPn36lOs0e//+vdO7d++c2H/z5k1+7Yv8C3iadTrL+T1GHty0
        GoFrH197nkd/fb2f7e7uOnBfv37Nvnz54mT3P3/+PBTg+QKA/fLly9zje/l9KaPVOORGPRcBgDDQ7fay
        7e0d54knJydnoLL1pfPfvn1zWyDzxRA6lpaaDxONwPVDAfH12bPnQ6iChWcKIuJY+0jXaJ/P4cl7e3t5
        jN7KY/JqHmK6Lik2ATp5QpMAOzc3l3vZevb69WvndT68y+r09NRB/vDhQ3ZwcJDt7OzkX+CKCxWEDFuP
        mIoO10JlX966tNR2nkUYAGwIUh0CNPGYpLe4SD3GE15Mj04KV8e93uowvuJhPNL28a9Tuu/x8XHerNt0
        X+rMwJWKMDDvsvnu7kv3yH7//j0aVCvKwIOPjo7y1si664hYwLGULOYW+/N54nrmmlkknxCIWNKXuL+/
        n/X7G8M6xYScyHMxYME1jwgFeBFw60pgk2SfDMqkRUKPr2gLx/XeJHBbrfncmAWXsd++fTtsYqWAa6Xw
        wNPDFz0zcDFmY2PDhYSQ4bFk28E6pqPR7XYd3JjhITpcKi+429vbrtllH9XYsmWxT2g4PDx0LQfa2UXI
        Ctf9qkrkuQuup0Tfn6aXNbbwLADEA+4D5ukhNNCpmAm4jB2QqYl51tCUcCmLfY1BTD1chQWSGV1RCzeF
        FHMljT+8evXKJdlQnetSsoTW6XSGYUGeNPLc8Uc3plQecZekVtQvDuRkcNvttotzgut7VExRli2PfcEd
        dXDq178CrpXKJkQtLxfzcqE616GkYYGRKRsWJN+z6hblqUz1DIGrsBBLyeBiCEkEw2RoTKCTRPn0FBny
        1PhuDA+ODletBTyX5g+tBd9zY0tfosplyxDk6uraEOpUw1XMbQKupHKBTUIrJjOnGC4CLt1fupy2+5sq
        LFCeymRLHQhRfOGh+talZHAZyyXu4jFNei8JjWkfxjlmoPvLnBVrCFrOe+lIMAvRBFzKBC7JjNlhjI/V
        gUBJ4BaAC+8l7jJgjZEhADEluDw9DH9OPVwSRZEsiql0prmBy/yZNTqFJwsubVzm0gRXCtX/KkrguaNM
        TGgALjEPIwWUxJYiuVEG5TI6x3oJAR05QLj+l1USuAhD8FxiHTEvhaeGBFzm8WjjMhsdqmtdSgy35WId
        U9xNwaVcVviwdmKm4KJ+v98oXEIDa8noQMwcXPrzJJSm4CK64azlVZ2o31TGXL/SzKXt7b12HgTg2InM
        fons08YmqbJs1dYrhpLDxSjWiTFwgsEp4dIzpNsbe8BGShIWMEBG8Bjivc+fP48OVtITQhOQsMRaMVs3
        7detZDEXYQhw8V5eJLno0lHrhVWl8IPX0r7li40ZZ62Seq41hkY8ngQAeZbvyVU9O/RZnWfL/Ym1PC18
        scCNDRYlhyujtI4BALHgIu6Njo/fuTY25c8UXF8Yx5s7eFLdy5ssZN2XcwcHh3lIWBnWYSbhWs9ZW+vn
        oaFYmHdZwP7n/GO6u4QEJkd9oLEBNxZzEW/Z0KDHeCD4gKqGBV/6nO5Dd1cDNbGBWjUGF0MRRtvYa6HU
        AZekyduVWo87U3CtMexjoI5lLFMudCoE1Sp0zhfX+F8Ix+wzOM/ij2JKZ7xusdVIzLXHDJ50Ot28SzoY
        a/cKUhXv5Rp7HWBp15LEut1REvMV24uThgX/GMmTeYuS2AikSd46Cbb+RvxmZQ9JjLhelOFrVBft163G
        4XKM9wIBGOfNDFeFy1MwGAyGnYapg+tXrKyiFqS9RvsYTxuUcdY6pt0Ft/Dc9nDcNlS/UH3Kji+qS8Gl
        0LKKTqqg9u11GI538cMVtkMxyUPLpM+y5fNMJ/EGu30tSmWrfL8+ZddcRrWEhaqV848xmHDAe2FHR/XP
        q/EUEMeZ6S1778yvU0ghW6qoEbgyki4wP6/COgI8rU643AuR2Ag3ei2VeGsh+3UMKWRLFV055oYKrVIZ
        hv5o39LI98FqvyrwSdcTfzXcSIgIAY6lK8XcKhCRrqEwDMNIljXZdm1MARzwLEYZDJ65l1+oB/G+ihdb
        O6vYK9USFiapqDyxte2ms/lFEMJACCwAkI59L7R/q6LQ5wHMugXivJbtU0cfchnExuEKKEmEn6ZizooQ
        QHLBOAzlcQ0ZHwOuvS/nCBO0JGiqMSPC2DItllHdw3ahBuEWUAtPXXJLRoFKvMNTASqo1nDBKJO9fpJC
        9/LBsq/7sU/M5/cf+v1N1w0XvPMgV9GV4NqKsJqG5Uo8/ox0MRDO4g+8xDf4orJw7HkBsucmSWB1LMj8
        ftnJyYfcCQ5zZxi4rjiebGMytl7Ea1EQLjcMfXP25vYa2qrEU4b2mLoGKmO0ZVCuk2zdgMzg/f7+QR4y
        drONjU3XqtFssc9EPMrAX8hzuYEKYJ/HiNkEvm3akgwb0q6koqGYep1FXVVnnALnIPESl7e2nrq8od+T
        tDy0teelIFxdjCxM/R1PpbDBgMx/lMfT4t0yG09RyIjrLlt/7OGcftaQDg9DmEp+kljZfTSE++DBw7EL
        2ALW7rPt9dby5tQLl23tIIsfAi4SC6+TbL1li7YkZda5sRyKZK0BIUmspDOe61/AUnuyP7GHAW1uTvBX
        oqLgMsDTJgvW2mLtwW5aGDQracaRwIsWUsHL8jsHLh8qXudnusTvqvowyyo0LbK2hf7GVraRW0jcJHEc
        b8RspAkJjdZAa/jmo52hpSAVNksKOUeZnfwdHsRjFhbqx+AUPsfg2pgruPw8H9mSXpUt0C+8DLaumRZR
        3zKYkrWJawFMK4kWhT8o//jxXA733rjnQh+wDLDwQW4ybaBSijhMa8KGBwAHwwLvjDGoUeVF6H87dHk6
        TzetiCLBlcItBlx4d0GDLBbgrMO8iH0Cy2dwQhKchjNhaeD+Nz8x78YHSGKMDfg3u9FZ2RhNC6L4pVM6
        X62zcDlJrCWGqMdlb3ajsOCEaADQwYAjCW4MLqLtRptWTa8bnS/AwotOFs5J3joDF5eGPi7OB6zb36hc
        gkue4i1R8tZYWMCVaSUwwsUHfLDcwB7faFzwIbHRm2UG5gxcpqCbfglvWgUzhHMyekYngv8zN4Tb9IvP
        0yyYjeLuevb330/G4WqARi2Fm5h7vmAkTnDDORkxG4PLD0dqkObGcy8n4GowZwwu4wmMU9oFcTeQy2Wf
        bHFSi4FO2BDu7dt3s99/f5SfeOwm5JgvIuONtjc6K/5fW3u4z5a34WmG/fXX/7Nffvk1++GH29mt+/cf
        ZIwvVNVFr7979z/B82WKXZ909X+Y/QNk48RuJ/xqwgAAAABJRU5ErkJggg==
</value>
  </data>
</root>